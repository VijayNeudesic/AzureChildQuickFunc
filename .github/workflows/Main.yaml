name: CI/CD pipeline for Function App deployment

on:
  workflow_dispatch:
    inputs:
      FUNCTION_APP_NAME:
        description: "The name of the Function App to deploy"
        required: true
        type: string

env:
  PYTHON_VERSION: "3.11"
  #FUNCTION_APP_NAME: "fx-jpromgmt${{inputs.deploy_region}}-${{inputs.app_type}}-${{inputs.deploy_environment}}"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      FUNCTION_APP_NAME: ${{ steps.set-outputs.outputs.FUNCTION_APP_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: "Install Function (${{ inputs.FUNCTION_APP_NAME }}) dependencies"
        run: |
          pip install -r requirements.txt --target .python_packages/lib/site-packages

      - name: Set output variables
        id: set-outputs
        run: |
          echo "FUNCTION_APP_NAME=${{inputs.FUNCTION_APP_NAME}}" >> $GITHUB_OUTPUT

      - name: Check and Install zip
        run: |
          if ! command -v zip &> /dev/null
          then
            apt-get update && apt-get install zip -y
          else
            echo "zip is already installed"
          fi

      - name: Zip artifact for (${{ inputs.FUNCTION_APP_NAME }}) deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: [apim-test]
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip -o release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.US_AZURE_SUBSCRIPTION_ID }}

      - name: "Deploy to Azure Functions"
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: ${{ inputs.FUNCTION_APP_NAME }}
          package: .
          scm-do-build-during-deployment: true
          enable-oryx-build: true
